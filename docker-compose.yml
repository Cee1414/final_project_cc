services:
  redis:
    image: redis:7
    ports: ["6379:6379"]

  dynamodb-local:
    image: amazon/dynamodb-local
    ports: ["8000:8000"]
    command: -jar DynamoDBLocal.jar -inMemory -sharedDb

  init:
    build:
      context: .
      dockerfile: init/Dockerfile
    command: python init_dynamo.py
    environment:
      - TABLE_NAME=jobs
      - ENV=development
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_ENDPOINT_URL=http://dynamodb-local:8000
    depends_on:
      - dynamodb-local

  submitter:
    build:
      context: .
      dockerfile: submitter/Dockerfile
    command: python app.py
    ports: ["127.0.0.1:5000:5000"]
    environment:
      - TABLE_NAME=jobs
      - ENV=development
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_ENDPOINT_URL=http://dynamodb-local:8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_QUEUE=jobs_queue
    depends_on:
      - dynamodb-local
      - redis

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    command: python worker.py
    environment:
      - TABLE_NAME=jobs
      - ENV=development
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_ENDPOINT_URL=http://dynamodb-local:8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_QUEUE=jobs_queue
    depends_on:
      - dynamodb-local
      - redis
